name: Build OnePlus 13T Kernel

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Free up space on runner
        run: |
          echo "Before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet \
                      /opt/ghc \
                      /usr/local/share/boost \
                      /usr/lib/jvm \
                      /opt/hostedtoolcache \
                      /opt/az \
                      /opt/microsoft \
                      /opt/pipx \
                      /usr/local/lib/android
          sudo apt clean
          echo "After cleanup:"
          df -h
      
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl ccache
          
      - name: Set up repo
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "PATH=$HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Initialize manifest
        run: |
          mkdir kernel && cd kernel
          repo init --depth=1 -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8750 -m oneplus_13t.xml
          repo sync -c -j$(nproc --all) --no-tags --no-clone-bundle --force-sync
          repo forall -c 'git gc --auto'
          # 修复wifi、蓝牙
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

      # 添加 SukiSU Ultra
      - name: Add KernelSU-SukiSU Ultra
        run: |
          cd kernel/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          export KSU_VERSION=$KSU_VERSION
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Apply Patches SukiSU Ultra
        run: |
          cd kernel
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android15-6.6
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
          cd kernel_platform
          
          echo "正在打susfs补丁"
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android15-6.6.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          cd ./common
          patch -p1 < 50_add_susfs_in_gki-android15-6.6.patch
          cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch
          echo "susfs_patch完成"

      # 配置信息
      - name: Add Configuration Settings
        run: |
          cd kernel/kernel_platform
          CONFIG_FILE=./common/arch/arm64/configs/gki_defconfig

          # SukiSU Ultra配置
          echo "CONFIG_KSU=y" >> "$CONFIG_FILE"

          # VFS配置
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> "$CONFIG_FILE"

          # SUSFS配置
          echo "CONFIG_KSU_SUSFS=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> "$CONFIG_FILE"
          
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> "$CONFIG_FILE"
          # echo "CONFIG_LOCALVERSION_AUTO=n" >> "$CONFIG_FILE"
          
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> "$CONFIG_FILE"
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> "$CONFIG_FILE"

          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki
      
      - name: Build Kernel
        run: |
          # cd kernel
          # LTO=thin SYSTEM_DLKM_RE_SIGN=0 BUILD_SYSTEM_DLKM=0 \
          # ./kernel_platform/oplus/build/oplus_build_kernel.sh sun perf
          export PATH="$GITHUB_WORKSPACE/kernel/kernel_platform/prebuilts/clang/host/linux-x86/clang-r510928/bin:$PATH"
          sudo apt install -y libelf-dev
          cd kernel/kernel_platform/common
          MAKE_ARGS="LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang \
            RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc \
            PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole \
            LD=ld.lld HOSTLD=ld.lld KCFLAGS+=-O2"
          make -j$(nproc --all) O=out V=1 $MAKE_ARGS gki_defconfig
          make -j$(nproc --all) O=out V=1 $MAKE_ARGS

      - name: Show dist directory structure
        run: |
          # tree kernel/kernel_platform/out/
          tree kernel/kernel_platform/common/out/

      - name: Clone AnyKernel3 and prepare files
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3.git --depth=1
          rm -rf ./AnyKernel3/.git
          rm -rf ./AnyKernel3/push.sh
          # cp kernel/kernel_platform/out/msm-kernel-sun-perf/dist/Image AnyKernel3/Image
          cp kernel/kernel_platform/common/out/arch/arm64/boot/Image ./AnyKernel3/
          find kernel/kernel_platform/common/out -type f -name "auto.conf" -exec cp {} AnyKernel3/ \;
          find kernel/kernel_platform/common/out -type f -name "auto.conf.cmd" -exec cp {} AnyKernel3/ \;
          find kernel/kernel_platform/common/out -type f -name "Makefile" -exec cp {} AnyKernel3/ \;
          find kernel/kernel_platform/common/out -type f -name "compile.h" -exec cp {} AnyKernel3/ \;
          
      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: Ak3_OnePlus13T_Kernel
          path: ./AnyKernel3/*

      - name: Upload vmlinux Separately
        run: |
          find kernel/kernel_platform/common/out -type f -name "vmlinux" -exec cp {} ./ \;

      - name: Upload vmlinux
        uses: actions/upload-artifact@v4
        with:
          name: vmlinux
          path: ./vmlinux
